# 4 K
def aminoMassTable():
    aminoMass = {
        'G': 57,
        'A': 71,
        'S': 87,
        'P': 97,
        'V': 99,
        'T': 101,
        'C': 103,
        'I': 113,
        'L': 113,
        'N': 114,
        'D': 115,
        'K': 128,
        'Q': 128,
        'E': 129,
        'M': 131,
        'H': 137,
        'F': 147,
        'R': 156,
        'Y': 163,
        'W': 186
    }
    return aminoMass

def linearSpectrum(peptide):
    aminoMassT = aminoMassTable()
    prefixMass = {
        0: 0
    }
    for i in range(len(peptide)):
        for j in range(20):
            if(list(aminoMassT.keys())[j] == peptide[i]):
                prefixMass[i + 1] = prefixMass[i] + aminoMassT[peptide[i]]

    linearSpc = [0]
    for i in range(len(peptide)):
        for j in range(i + 1, len(peptide) + 1):
            linearSpc.append(prefixMass[j] - prefixMass[i])
    return sorted(linearSpc)

peptide = "KFSSLYTEILLAATINREKANYWTYGQSSSEWKGHSFWNPAKFNGENN"
ls = linearSpectrum(peptide)
expMass = "0 57 71 71 71 71 71 87 87 87 87 87 97 97 101 113 113 113 113 113 113 114 114 114 114 114 114 114 115 128 128 128 129 129 129 129 131 137 137 142 147 147 147 156 163 163 163 168 172 174 174 184 185 186 186 186 194 199 199 200 200 200 201 211 211 216 218 224 226 226 227 228 230 234 234 242 242 242 242 244 255 261 261 264 269 270 271 275 275 276 277 281 282 287 288 296 297 300 300 301 303 309 313 313 313 314 315 317 321 323 325 329 339 343 346 348 349 355 355 356 358 358 358 362 362 363 368 371 377 383 383 384 384 389 393 396 397 398 400 402 404 408 410 410 412 416 417 427 427 430 431 434 443 449 450 456 460 463 464 468 468 469 472 472 476 477 481 486 486 487 487 489 495 496 497 497 498 499 505 506 506 512 512 517 518 527 528 534 536 539 541 545 551 557 557 557 562 563 569 574 582 583 583 583 586 590 593 596 597 598 599 600 603 604 607 610 610 610 611 613 615 616 619 619 619 624 625 625 633 640 649 650 654 655 661 663 671 671 680 685 686 696 696 697 698 700 704 704 706 711 711 711 712 713 713 718 720 723 724 725 727 731 732 732 733 739 743 746 747 752 754 763 767 767 775 776 779 787 793 798 798 799 800 801 802 803 809 810 814 818 818 819 823 825 825 826 827 827 834 834 837 840 842 845 846 848 852 857 860 861 874 874 880 880 880 885 886 896 896 899 903 905 906 912 913 915 915 916 916 917 924 929 932 932 932 939 940 951 953 955 961 962 962 963 965 966 967 973 973 974 987 988 993 993 995 999 1003 1003 1004 1008 1009 1010 1013 1016 1019 1028 1029 1029 1033 1034 1040 1046 1049 1053 1067 1068 1069 1074 1075 1076 1076 1080 1080 1081 1090 1098 1101 1102 1102 1102 1106 1110 1111 1115 1116 1116 1122 1122 1123 1127 1130 1135 1136 1137 1142 1143 1147 1147 1155 1159 1161 1162 1163 1166 1173 1181 1181 1183 1193 1194 1198 1202 1203 1212 1215 1217 1222 1223 1229 1229 1230 1232 1232 1234 1235 1235 1237 1239 1244 1250 1258 1265 1269 1270 1274 1274 1275 1276 1288 1288 1290 1294 1296 1303 1306 1307 1308 1309 1310 1316 1316 1316 1319 1321 1326 1329 1329 1336 1343 1346 1346 1357 1359 1359 1361 1363 1364 1365 1379 1384 1386 1389 1397 1403 1403 1411 1413 1416 1417 1420 1425 1430 1430 1430 1431 1433 1435 1436 1437 1438 1444 1450 1450 1451 1456 1456 1459 1460 1460 1465 1470 1476 1484 1492 1496 1498 1499 1499 1513 1515 1517 1525 1527 1530 1531 1536 1543 1545 1545 1547 1549 1550 1558 1563 1565 1565 1566 1567 1570 1570 1579 1583 1585 1586 1588 1597 1598 1612 1612 1623 1627 1628 1628 1629 1629 1632 1636 1650 1655 1656 1658 1659 1659 1659 1664 1672 1673 1678 1678 1680 1680 1684 1684 1692 1699 1699 1699 1712 1717 1719 1726 1726 1726 1730 1730 1737 1741 1741 1742 1746 1751 1759 1760 1765 1769 1772 1786 1786 1787 1792 1792 1793 1797 1801 1808 1812 1813 1813 1814 1815 1815 1820 1828 1833 1843 1846 1847 1848 1854 1856 1858 1859 1873 1873 1874 1878 1880 1889 1898 1899 1901 1906 1914 1915 1925 1926 1928 1929 1929 1933 1933 1937 1943 1945 1946 1948 1956 1960 1961 1962 1972 1976 1978 1986 1987 1988 1993 1999 2001 2001 2013 2020 2026 2027 2030 2032 2034 2035 2042 2042 2043 2050 2057 2059 2061 2062 2069 2072 2074 2075 2075 2088 2089 2092 2097 2100 2115 2115 2117 2130 2133 2134 2136 2140 2144 2146 2148 2149 2155 2156 2161 2162 2163 2164 2171 2176 2186 2187 2190 2198 2204 2206 2212 2217 2225 2231 2231 2235 2243 2247 2258 2261 2261 2262 2263 2263 2268 2269 2269 2274 2275 2275 2278 2278 2283 2292 2299 2299 2320 2330 2333 2343 2345 2345 2346 2349 2349 2356 2359 2362 2370 2372 2375 2375 2376 2382 2390 2392 2397 2405 2410 2411 2412 2430 2430 2433 2443 2446 2449 2457 2459 2459 2461 2462 2463 2469 2473 2478 2486 2489 2496 2498 2499 2505 2511 2532 2533 2538 2544 2544 2556 2558 2560 2560 2561 2562 2570 2572 2574 2575 2576 2586 2587 2591 2592 2593 2596 2598 2612 2631 2633 2633 2645 2646 2647 2657 2658 2661 2662 2672 2675 2685 2685 2688 2689 2699 2699 2704 2705 2707 2721 2724 2730 2733 2733 2747 2749 2758 2759 2760 2760 2770 2774 2775 2786 2786 2788 2802 2814 2817 2819 2820 2821 2835 2835 2841 2844 2857 2861 2861 2861 2861 2862 2871 2873 2873 2888 2888 2896 2906 2915 2916 2917 2928 2930 2948 2949 2949 2954 2958 2958 2967 2974 2975 2975 2975 2982 2986 2988 3000 3001 3020 3024 3029 3030 3035 3041 3043 3059 3062 3062 3062 3067 3072 3078 3079 3088 3095 3095 3096 3101 3103 3115 3143 3144 3148 3149 3149 3149 3154 3157 3167 3172 3172 3174 3180 3185 3191 3193 3193 3209 3216 3217 3223 3236 3245 3256 3262 3264 3264 3267 3271 3273 3278 3285 3288 3296 3296 3304 3307 3307 3309 3314 3337 3358 3359 3365 3377 3378 3379 3383 3384 3385 3385 3393 3396 3398 3409 3410 3418 3418 3421 3424 3436 3456 3456 3464 3471 3472 3492 3492 3497 3506 3507 3511 3512 3513 3527 3527 3531 3532 3549 3551 3565 3569 3573 3579 3584 3584 3585 3620 3621 3628 3636 3640 3640 3645 3655 3660 3660 3662 3666 3679 3682 3686 3698 3698 3713 3723 3731 3734 3753 3768 3773 3773 3774 3776 3776 3791 3792 3795 3802 3813 3814 3826 3827 3845 3860 3860 3866 3870 3881 3889 3890 3890 3904 3915 3916 3921 3924 3928 3941 3947 3977 3991 3992 3994 3995 3998 4003 4004 4007 4018 4025 4028 4029 4063 4078 4089 4090 4091 4094 4096 4117 4123 4132 4135 4141 4142 4160 4176 4177 4188 4203 4204 4222 4224 4225 4246 4255 4259 4264 4270 4273 4274 4289 4291 4301 4317 4353 4371 4372 4378 4384 4386 4387 4387 4388 4388 4402 4411 4459 4475 4485 4499 4500 4500 4501 4525 4531 4534 4539 4546 4587 4613 4614 4622 4628 4632 4647 4648 4653 4674 4693 4727 4729 4734 4742 4750 4761 4795 4821 4821 4821 4843 4848 4856 4892 4908 4935 4949 4957 4968 4995 5005 5006 5082 5082 5092 5096 5119 5120 5179 5206 5210 5229 5233 5293 5320 5326 5357 5407 5440 5454 5554 5568 5682"
expMass = expMass.split(" ")
ls = linearSpectrum(peptide)
ls = list(map(str, ls))

from collections import Counter

counter1 = Counter(expMass)
counter2 = Counter(ls)

common_elements = counter1 & counter2
a=list(common_elements.values())
print("")
print(a)
sum=0
for i in a:
  sum+=i

print(sum)
