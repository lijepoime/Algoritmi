from google.colab import drive
drive.mount('/content/drive')

tablica = {
        "AAA": "K",
        "AAC": "N",
        "AAG": "K",
        "AAU": "N",
        "ACA": "T",
        "ACC": "T",
        "ACG": "T",
        "ACU": "T",
        "AGA": "R",
        "AGC": "S",
        "AGG": "R",
        "AGU": "S",
        "AUA": "I",
        "AUC": "I",
        "AUG": "M",
        "AUU": "I",
        "CAA": "Q",
        "CAC": "H",
        "CAG": "Q",
        "CAU": "H",
        "CCA": "P",
        "CCC": "P",
        "CCG": "P",
        "CCU": "P",
        "CGA": "R",
        "CGC": "R",
        "CGG": "R",
        "CGU": "R",
        "CUA": "L",
        "CUC": "L",
        "CUG": "L",
        "CUU": "L",
        "GAA": "E",
        "GAC": "D",
        "GAG": "E",
        "GAU": "D",
        "GCA": "A",
        "GCC": "A",
        "GCG": "A",
        "GCU": "A",
        "GGA": "G",
        "GGC": "G",
        "GGG": "G",
        "GGU": "G",
        "GUA": "V",
        "GUC": "V",
        "GUG": "V",
        "GUU": "V",
        "UAA": "*",
        "UAC": "Y",
        "UAG": "*",
        "UAU": "Y",
        "UCA": "S",
        "UCC": "S",
        "UCG": "S",
        "UCU": "S",
        "UGA": "*",
        "UGC": "C",
        "UGG": "W",
        "UGU": "C",
        "UUA": "L",
        "UUC": "F",
        "UUG": "L",
        "UUU": "F",
    }
def revcomp(rijec):
  nova=""
  for i in range(len(rijec)-1,-1,-1):
    if(rijec[i]=="A"):
      nova+="U"
    elif(rijec[i]=="U"):
      nova+="A"
    elif(rijec[i]=="G"):
      nova+="C"
    elif(rijec[i]=="C"):
      nova+="G"
  return nova

def kodrijec(rijec):
  nova=""
  for i in range(0,len(rijec),3):
    nova+=tablica[rijec[i:i+3]]
  return nova

text="CACAGGGAACAGTGAAAATACAACGTGCCCCCCTATCTTCTTAGTTTGCGTGTATAGGTGTCAAATTCGGAAGGCTTAAGCGAACGGTATTGCCAAGATTCAACGTTGTACGTCGGAATTGAATCCCGAGCTTATGAGTACGTATGGTGACGGATTCCCGCTTCAAAGGACTTGTATAGATACGATAAAAATAAACACCACCGTTCATTCCCGCCAAAAGAGCCAAAAATGCTAGCGCCAGGTCGATAGATCAGTTTGCGGTGTAGATGAAAGATCGTCATTGCAGCAAGACATAGTTCCTTAATGAGCACTCATTGGGATACGGGGGGAACCCAGGACAAGAGTCCGTTCCCTCTATTGACTTTACTCAGCAAGCGGGAATGGAAGGCTCGTCTTCGTTCTAATTGGTTTCTGTATAGCCTTTTCCCGGTCCTGCTAGCGCGTATACTTAGAAGGACACTATGGCGGTGGTACGTCGGAATTTATGCCGCCCTGAAGTGGCCTGTAAATATCGTCAGATTCTCGTGTATTGGTCAACTTATATCCCGTGAATGCCTTCTTATGTGTATGACCGGGTGGCAGAAAACCTGTCCCACGCATACGCGGATAATGGATTACAATCGGCGCGTTCACCATAGCGATCGTCACCCCAGTGCGGGTCAGGAGGACACGTTTGAGAGTTACTTATAGGGGTTAACATTGCATTTCAGCTGCCAGAGCCCGGTTGTCCTATTGACGCCGTTTAGGGATCCCTTACCCCGCAGCTTTTCCCAAAGGTTTACACCGAGGGTGACAGTCTCATAGGGTTGCGCATTACCATCCAACTGCCGCAAATAAAAAGAAGTAATGTTAGAGACTCGGGTCTGGTAAAGCCAAGATGCTTTGGTGAGACCCTGACAATGCTTTGTTTGACTTAGTAGACGTCGACGATGTGACTAATATGGCTCTAGTTGAGGTCTATCCTTTGTTGCCGTGCTATGCGCATGCGTCATCTAGAAGAGGGTATACGGAATTGTACGAACGTCTCAGTGCCAGTCACGCCAGTGTCAAGATCCGAGCGACCTCGGGGAGCCCTGGAAATAGCCTGACTATACCGGGAGTGCCATAATTTATGCCCCGCCAATTAGCGAATAATTGTGCCCATTTACTTATCTACGAGCTACCACAACTCGTGCGTCATAGCCATCGATCTTTAAATATTAAAATCGTTGACCCGAAGTCTTGTCATAAGAGGGGCCTGCTCATACTCTTTGTGTTGGCGGGATACATGACAACTGTGACCATACTGACCTATCAATATACGAGGTCTACCTCATGGACGGGGCAAGTAAGGGGAAACCGGATCCCTGACCCTGAAAAAGAGAGACTTCGGGGGCAGAGCGACAGAATAAACATAATCGACTCTCCGCCCAGTCATGGGTGGTCTCCGAGAACGATGCTCTTGTTAGTGTTCTGACCTTGGTACGGGTAGCAGTAAGCCTTATCCTAGCAGGTCCGTTGGTCGCTTGGGTGTCGAGTTACTACTCATACCCGTTCGCAGCTAATCGTTACTCCATAGCTAACTTTGTGGTGTTGTAAATATAAGCCCTCTTATGAGACCTATTCGAGCAGCGTCCAACCTAGGTAACGGTAATCACCCTCGAACAAGTAAGTGGGCACAGTTATTTGCCGGATTTTCCTGGCGGCTCGGCGTTGCCATTAATAGATCTGAGCATCCGCTGGCGTTGCTTGGGAAAGGGGGGTAGTCAGCGGAATAGGGCACCGTGGGTTTAGGAAAGAGCGGACTGTGTCATGGGTTTTAGGCGCTCCAGAATACATTAGCGCGGCGGGCGGCGTGCCCAGTCGTCCCAACGTATTCCTTATATCCGTGAAGAGCTATCCTCTTGGTGCGAGACAATCGATTCCCTACCCCCGTTCCCGGCAACAGCGAACAATTGCGCACATCTGCTGCCTTTGACCTATTGGTGTCGAAAATGAATAGAATGAGCTCAGAACTCGTCTGGGGTGTATATTAGTCAATGGGCTGAACGCAAATCGCGGCGCCCCGGTCAGCTAGTTATAGGTCTAACGCAGCATGGTGCTGGTTCGGACGCGCCTGCAACCACTAGTATCCCATTAATGGCAACCATCATTGTCCAGGACTTGACTGTGGCCTGCTCAAACCTAGACATATTGCGTTTTGTGAGGGAACTGTGCGAATTGTTTTGATTACCAATACGGGCAATGAGGAGTAGGCCAGTAGTGGCGTGTCAGAGGGCGTACCTTGAATCACTATACGCGGACGTTAAGTCTAGTGATGATTTCTTGTTTGATTGGGTCGCCGGAGACGTTAATAAATGAGCACAATTATTTGCCTCTCGGACTATGAAAGTGTAGCATGGGGAATCTGCTAGTGTAGGTCTTTAAGTGTTAGGCTCGTTGTTCAGGAGGGTTTCACATTTGGTGATCTAGTTGATTGGTGATTAGGCCGAGGGCATGTTGCTACCACTAGCACCTGTAAGGAGATGTGCACAGTTGTTAGCTTTTTTGTTCGAGACTGTCTCATCAGCTGTCAGCAGGTTAAGATCCCACTGAAACGACGGGACTGACGAACGCGACAATGACTCACCCATTGTCAATACGACTCCTAAGTGATTCGGCGCACATTTAAACTGTTGTTGAGCGAGTGCTGGAGGCGAAAACTGCCAGCGTAAAGCCTGTAACGCAGGCGAGCGAGGCCAGGCCTTACGACTTGCCGCCTTAGTGTTCTATCTCTTGGTAAAGGATTGTACACTCGATATCATCCACTGTGCCAGCTCGTTTCATGACGCGTTTCCAGAGTCACGTAGAAGCCCGCATGATCTGCAGGCTCGTAGTCGTGCTTGCATCCCGCTAGCGGCCCTCGAGAACAAAACGATGAAACTCTCAAGCGTCAGCATTACTTCGGTTCCGAAGAATTCCCAGGCACGTTAGGGATCGTGTCTCATGCCGGCGTGGCACCTTGGTCTAAATTCACGCAAGAAGAGTGATACCTCGATGGTTTGGAATACTCACACGCTGCGCGTGTGTGTCGTTACACCGCACTGCCCAGCGGGGCCCAGTAGGCGCACAAAAATAACCAACGAGTGTCCGAGGACCCGGAAAAATAGACGGAACCACACTTATAAGACCATGCGGCTCTATTGCGGGTTTTGTGGGCTCCCAGCTTTAGAATGCGCTACCTGCAGGATGACTGTCACCATGATCTGCGCAGCATGGCTAGATAACTAAGATAGGTAACAAGATGTCGTGCAGGACCCACCATCGGGGAATGACCCCTCCTGCCGCGATGAGCAATTAAGATGAGTAAAGGCGGTAGGAATTACGCACCGCCACACTCCCCGCGCGTTGTCGGGACGAGTTGACTCCCTTCGCTCTGTGCCCTTTCGCAGTAACATAGCCACCATCACTTAGCTGGACGAAGCAAATAACTGCGCACATTTACTCGCTCACAGCCGCACGCGCATCTTTCCGCCTGAAGTCCGGAGACCGTATATCGATGCGCATCCACATCCAGTTACGTCTACCGTCTACCCCACTAAAGCGTCACGTTCTGGTGAGACTCACAACCTGGACACTCGCAGATCAATAGATGTGCACAGTTGTTAGCTCAAAATGCTCGTCCCAATTGGTCCCAGGTTTCTAGGTGCTATGATAACGCTCTGCTCATGGACAACAAAGACTCCAGAGATTGGTCAGTACCGAAGAGGCTAATAACTGTGCACATTTACTGCTGAATTGCAAACTAGGCCTGGGTAACAATGTGTTGCGATTGAAAGGTAAGCACACACCTTTTCATGACTTCGTCAACAGACGGCAAGACGCGTACCTGAACCCGTCTCGTGCTATTCACTGTCTTCCTATCTGTCCGTGGGCAAGATACCGAGAGCATACAGGGTTCGCAATACAGACCTCAGGAGATTGAACAGAGGCCGCATATCTGATGGTGCGCTAACAATTGTGCTCATTTACTCCTGGAGGACAGTATTGATCAACTCGGTCAATGGACATGACAAAGATCTTTACGCCGAGCTTACTTGCCACCTCCGCTAGGCTAGCCTTATTGTTCACCAGGTAAATGGAAAACCTGTCGATTGCTTTTTTCGCCATACGGAATTATGGCCCAGCTTCGAAGAGCACGACCCCTGATAACGTAATAGTCAGTAAAAGGTGATGTTGGAAACAACATTCCTTCTTTCCGTGCACTGTCACTCTAGAGATGAAGAGGTATATACACTCTATGGGATATGTACTCCTTACAGCCCAATTGTAGATAGGACACCATATAGACACATAGCTCTCGACCCTAAATCGGTATGGGTCAAGCCCCCGAAATGTCGAGATCCTTCGTGGCTACAGCACGAATGGCGGAGTACACTGAGAGAAGTATAGGCTAGGGATGACTAGTCACACAACGGTCGGCCAATTCGGCGACACTAGAAGGTGCGCGCAGTTATTTGCCTTCAGGTAGCATACAATAAACTCTATAGCTGGACCTTTGAGGGCGTGGCCTAGAGTCTCACGAGATCTAATCTCGTACTGTCAGGATCGAACTCCGCAATCAAGGCGCAAGTAGACGGTTCTGTTGTTTATAAATGAGTAGTGTACCGCCTTTGTCAAATTGACTTGGCCGCGCGTCCAAAGACTCCATACCATTTAGTGAAGCGTGGGTTAGAAGGCCCTCTGTCACCATACCCCGTGACTAATGCACTGGAGGCTCTAGGCGTTGGCTCGGGAGTATCACGACGTGGAAGAATCCTGCGAGATACCTTATCGTACTTTAAGAAAGGAAGACACATCCATTGTTTGCTTTTTAATAATGCAAATAACTGTGCTCACTTGTTGATAATACGACAAGAAAGGGCTGTTAAGTGCTATGTAGTGTCGGGCATTATGCGCGTTAGGCACTACACAGTTCTAAGCCCTGACGACGAGTCAGTGGCAGAATGACACCCATCGGAGTGGGGGGAGCCTCTTACCGCCCTTGGCGACAGGCAATATTCATTAGTCCGCGACAACTCGCGAGTCGATACATACCACTTAGGGCCGCAGGCCTAGCGCTCCTAGGGAATCTGTCGACCAAAAGCAGCTGGTCTACGTGTAGGGGGGAATTTCCGAACAGGTGCCTCGTGTTTATCACTTCAAAGGGCTAATAACTGCGCCCATCTACTGCGACGCTTGTGTCGAATGAACCAGGCCAAGTACGCGACGTCTGGATAGTCACAATATAGGGTGGTCTACAGCGCTACGAGCTGTTCGCTACGCCTGATGTGTCGATTAGGGTTGTCTGCGTGCACATTAGGTAACCTTGAACCGCTGGAAAGATCCGGTAGTATCATCTGGGCACATGTCAGGCGAATAATTGCGCACACCTATTGTAATTGCACAGTTGGTCTGGAATCCGCAAGTCTACGGCCGTTAGTTCGGAAGACTGATTGTTAGAGACATGAAGCACCCAATGCGTGCTTACAACCTACGATGAGATGGACCTAACCGATACTCCGTGATCGGCTAAGATACATTTCAGCAATACTACAGGGGTATGCCTTATTGGTCCCGCTGGCTTGTGTTGCCGACGGCTACGAGACCTACTTGATGATCCAGTTCCCAAGTGTCACTCTGCACTTTTTTATGATACGTGACGTGGCGTTCGGTCCATAACTGTGTCGTACTCTAATTACGATACGGCTGGGAGGTCTATAATACTTTCCTGCGACTACCCTTGCACGGTACGACGAGATTACAGTAGTGGAGGGTATCAAAAGACAAGCACCTAGTAGACTTTTGCACTCCCTCTAATAGAGCTGTTGCGCCCAGGTATAGGGGGCGTTCCATTAACTGAAACCTAAGGTCCACTATTGATCACCAGCAAGGGGAGGGGGGCATTTGGTCGCAACCGACTTGTCTGGACGCCTATATGATGATCCCAATCAGCGACTCAAAAGTTAAGAGTTAACATCGGCGAACACCGGCATGTCGAACCCTACAATCCGATAAGGTTTGCTGCTGGTGAGCTCTTGGCGAATGGCGACTGACAGCAGGGGTATGTGAGGGTCACTGATCAGTAGTACCCGGGCTTCAGCTGACCCCGACGCCGATCGGCTTTGAAGGACAACAGGTGGGCGCAATTATTTGCGTCAGACAGCCAACCTACTTCCCGTTGAGATATTTCCCTCACTGAGCAATGGCGACGCCAGTCAAACGCGCTTCAGGACAGATACGCGACACTATGCACGGGGCGCTCCGACCAGCAGAACTCCCGAGCCCTACCCAATAGGCCTGCTATTATTCGGAATTAACCTTGGAGACCCGTTCCGCATCCCTGACATGTGTACCATAGTAGCTCGTGTGCTATGTGCCGGTTCGCTCCGGTTATGGCCCCCTTTCTGATTTAGTACACCGTACCCCGTTTTGCGTAAGGGTCTGAAAAGCCGCCCCAGTGGCAAACGCCGCTCACAAGCGTACTGGTCCCGTACTAGTCCTTTTTGAGCGAAAAACTATTTAGGGGACCGTAACCCCTCTGTCATAAGATGACCATTAGGGGTGAACATATTGGCCTCTGGGCACGGAGGCCCACCCAGAATCTAGGGATGATTGCATGCAATATAGTTATCTAAGGTGCTTGCGGGCGCTTATGGAGTAACACGTGACCCAATGACTAAACAAAAGGCACTGCCGAACAATTTGCGGGTGAAGTTCAACTCGTTGAGACGAATTATGATTGAATGACCAGCGCGGATCAGGAACAGGCCGTTGCGAAGAAAGGTATCGAGTAGATGTGCACAATTGTTAGCATCACCTTCACGGACTAGACGAATCGCGCGTTTCCGGTCGGGTTTACGGCATCCAGCGACGAACAAAAATTCCCGTTTTGTTGAAGGCAGGCATGCTGATCAGTCATCAAGTGCCTTTTGGTAACCATAAAGATAGTACCTACAACGAGGATTCTATGATGTATGAATCCGTGGGGATTTTAGGCTATCCATGTGCCTTTGATGTATGGACGCTAGTTACTCAGTCAGCTAGCCGGGGGGCTAACACCTGTGAGCGAGCAAGTACTGCGAACTACTCTACTTAGTTGGGAGAAGGTGAGCGCAGTTGTTAGCGCTATCCCCTCGCGCGTAGTAAGAAATCTCCCTGCTCTTCACGAGCGAATGGTTCCCGTGGGCCTTCTCAAAGCCAAGACAAAAGCTACCCACGGTTGCCTCACCGACTGGAGAACCAAATTACTAAGCGTGGAGCGGACATTCAAGGGGTCCCAGCATATGCCACGTCCCCTTACGCTAGTCATAGCGGTTTCAAGCAGAGGGCGTTAAGACCGGGCTCACGTCGCCAAAGCAAATGCACCTCGCTAGAGGTGACCTTTTTCGTATACAATACCTAACTTTGCCAATAACTGTGCACACCTCCTATCTACTGTAGTTCCTGGAATCGAATGGATACAGACGTTTTTGCGAATGGTCCAATCAAACCGAACTCATTGCCAGGTGTTGACACCTTCATGCCTCAATTTTTCATAGCGGTCAGGCACTCAGAATCAACAAACCCAAATCTGCCCATGCGACGTAATACTCCTGTTACCTGTTTCCAGTAGCGTAGGCCATCGGGCCAAGTTTTGTCGTCGAAACGTGTACCGACGGCTCACAATATGCACACGTGGGGGTGTTATTTGCGCAAACTACCCGAGTACGTGTCACTGGTTGCTATATCACTCCTGGGCTATATCCGTGGATACAACGATCACTGCATGACTGCCAGAGGCCTCAGGTTAGCAGCATGACATCGGACGTGTATATATACTATGCGGGATACGTTCCCGGAGAATGGGCGTGGGCTCACACGTCCGAAACTTCTCGCGAGCAGTAATAGTACCGTATAATCAGCAATCGTAATGCATCATTTCGTTCGTGTTGTACGTACCGGTGAGGATTAGTCTGGTCTACAAAATCGCGTCTGAGGCACGCGCTCGTAGCTAATGCGATCTTGAACTCGTAAGTAAGCGAGACCTCCGGAGGGCCTATTGAGTTCGAATGCAGATATATTGAGCTCCAGTCACACCAGCAAAGTCCTAAACGTGATAGTAGCAAATGCGCGCAGTTATTCGCATCTATGCAGTGAGTGTCTATATATTTAACCGCCTATTTCACTGGCGAGTGGCTAGGGACATACCCTCCTTTAGAGCAGCAGCGGCGGATCGACGGTAAGACGTCATCCCTATGAGAGCGATTAACAGTGGAAGGTCGGCCACTAGGGCGGAAGTCGGCCTGGTAATAGATGGTGTACCTCAGACCAGCCCTAAATGATGTCACAATACCGAGAAGACCACAGTTCGATTAGCGAACTAAGAACGGTGACTGGGCCATACACAGAATTGCGATCTTGCGAGCAGATGAGCACAATTATTAGCGTCATGCGCATTTAGGACGATACAAGGTGTATCCTACTAACATACCCTGAGGAAAGGTCAGGTTAAATACTTGAGTCAAATATGACTCGCATTTTCTCGTACCAACATTGTGTAGGAACGGGACTAGACCACTGCGGTTCGCTGTCTTGCATAGTGGAATCCTCCGGGAGACGATGAGAGTACTACCGCAGCTGGAGCCAGTTAGGAGAGTCCTAGATCATCGGTCTGATCGCTCTGGTGCTATCATCGCGGACCATCAGTAAAGTATTACGGGTCACCGAGTGAAGGCTCCCTACATCTCACCATTTCGCCCTTTCCCGCTACCTGTTAACAATGATTACCTCGCTATACGGGTGATGGAGTGTGCGTGCCGAACAGCACGAAGTTTGGATTTCCTTGCCTATTTGTACCGTTGCTTTCGCGGGCGCAATGATCTTGCTTTATAACTCGGGTTAGCCCCGGATACTTTATGATTTTGCCCTCGCGGTACGTTTTATCGGCAATCAGAGACTCAGAATTTAATGCCGTCACGTGACCTAAATGAAAACTACTGGTGTAGACCGCCTCATCAAAGTCACTTCCTAAGGCACAGAGACCCAGTTTGCGTGAGAACATTTTGGGTGTCCCTTAGGCTATCATGGGGAGGGCATCCGGGCGGTGTAATATACCAGGCGCGGGGAATTAGGCGTTACAGCACGTCACGGCCGGCTAATAATTGTGCCCACCTGCTCCACTATTTTTGCATACTTGGCCGTCATGAGCAAGGTGCAGATTGACTGAAGCTCCCCGCAAACCTATTTACAGTCGATTGTATAAGC"
pattern="ANNCAHLL"
rna=""
for i in range(len(text)):
  if(text[i]=='T'):
    rna+="U"
  else:
    rna+=text[i]
print(rna)

k=len(pattern)*3
parttexta=[]
for i in range(len(rna)-k+1):
  parttexta.append(rna[i:i+k])

print(parttexta)
odgkod=[]
for i in parttexta:
  odgkod.append(kodrijec(i))

odgkod=[]
odgkod2=[]
for i in parttexta:
  odgkod.append(kodrijec(i))
  odgkod2.append(kodrijec(revcomp(i)))



print(odgkod)
print(odgkod2)
indeksi=[]
rj=[]
for i in range(len(odgkod)):
  if(odgkod[i]==pattern):
    rj.append(parttexta[i])
  if(odgkod2[i]==pattern):
    rj.append(parttexta[i])
def vrati(rijec):
  nova=""
  for i in range(len(rijec)):
    if(rijec[i]=="U"):
      nova+="T"
    else:
      nova+=rijec[i]
  return nova
for i in rj:
  i=vrati(i)
  print(i)
